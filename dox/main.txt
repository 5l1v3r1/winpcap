<body>


/*! \mainpage WinPcap Documentation
\image html winpcap.gif
\htmlonly


<p><b>Author</b>:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Loris Degioanni (<a href="mailto:degioanni@polito.it">degioanni@polito.it</a>),
NetGroup, Politecnico di Torino<font face="Arial" size="4"><br>
</font><b>Home page</b>:&nbsp; <a href="http://netgroup.polito.it/winpcap"><br>
</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="http://winpcap.polito.it">http://winpcap.polito.it</a></p>


<hr>

\endhtmlonly

<h2>Modules</h2>
<p>
- \ref wpcap<br>
 - \ref wpcap_def<br>
 - \ref wpcap_fn<br>
 - \ref language<br>
 - \ref wpcapsamps<br>
 - \ref wpcap_tut<br>
- \ref internals<br>
 - \ref NPF<br>
  - \ref NPF_include<br>
  - \ref NPF_code<br>
 - \ref packetapi<br>
  - \ref packet32h<br>
  - \ref packet32<br>
  - \ref packetsamps<br>
 - \ref compilation<br>
</p>

\htmlonly
<hr>

<h2>Introduction</h2>


<p>This Manual documents the usage and the source code of WinPcap. It
offers a detailed description of the functions and structures exported to the programmers, 
along with a detailed documentation of the WinPcap internals. Various tutorials and examples are
provided as well.&nbsp;</p>
<p> You can follow the links at the
beginning of this page
or use the tree control at the left to reach the section you are interested in.</p>
<p>This documentation was created using (and abusing of) the free Doxygen documentation system, that can be found at <a href="http://www.doxygen.org/index.html">http://www.doxygen.org</a>.</p>
<h2>What is WinPcap</h2>
<p>WinPcap is a free, public system for direct network access under Windows.<br>
Most networking applications access the network through standard system
primitives, like sockets. This allows to easily transfer data on a network,
because the OS copes with low level details (protocol handling, flow
reassembly, etc.) and provides an interface similar to the one used to read and
write on a file.</p>
<p>Sometimes however the 'easy way' is not enough: several applications need to directly handle the network traffic. Therefore, they
need raw access to the network, without the intermediation of any protocol
stack.</p>
<p>The purpose of WinPcap is to give this kind of access to Win32 applications; it provides
facilities to:</p>
<ul>
  <li>capture raw traffic destined to the machine where it's running or to
    another host (on shared media)</li>
  <li>filter the packets according to user-specified rules before dispatching
    them to the application</li>
  <li>transmit raw packets to the network</li>
  <li>gather statistical values on the network traffic</li>
</ul>
<p>All these features are exported through a powerful programming interface,
easily exploitable by the applications. Documenting this interface is one of the
main goals of this manual, so if you are interested in it you can jump to the
\ref wpcap: you will find the description of the API plus a lot of sample code
and tutorials.</p>
<h3>What kind of programs use WinPcap</h3>
<p>WinPcap is used as an interface with the hardware by different kind of tools
for network analysis, troubleshooting, security and monitoring. In particular,
classical tools that rely on WinPcap are:</p>
<ul>
  <li>network and protocol analyzers</li>
  <li>network monitors</li>
  <li>traffic loggers</li>
  <li>traffic generators</li>
  <li>bridges and routers</li>
  <li>network intrusion detection system (NIDS)</li>
  <li>network scanners</li>
  <li>various types of security tools</li>
</ul>
<h3>What WinPcap can't do</h3>
<p>WinPcap receives and sends the packets <i>independently</i> from the
protocols on the same host. This means that it isn't able to block, filter or
manipulate the traffic generated or destined to the machine. Therefore, it
cannot be used by applications like traffic shapers, QoS schedulers and personal
firewalls.</p>

\endhtmlonly
<h2>Content of this manual</h2>
The purpose of this manual is the creation of a comprehensive and immediate documentation of the WinPcap architecture, both the internal and the public part. You will find two main sections: \ref wpcap and \ref internals. 

The first one can be used by the programmer that needs to use WinPcap inside its application: it contains all the information about functions and data structures provided by the WinPcap API and a manual that explains how to write packet filters. A tutorial with several code samples is provided too; it can be used to learn how to program with WinPcap with a step-by-step approach, but it offers also demonstrations easily integrable in your code of more advanced features.

The second section is intended for winpcap developers and maintainers: it describes the structure of WinPcap and explains how it works. Moreover, it documents the whole device driver code and the inerface of packet.dll, the inernal packet capture API. If you want to understand what happens inside WinPcap, this is the section you are interested in. 
\htmlonly
<h2>Further Documentation</h2>
<p>We suggest to give a look at the page <a href="http://winpcap.polito.it/docs/">http://winpcap.polito.it/docs/</a>
for further and up to date documentation.</p>
<p>In particular, if you are interested in
the structure and the internals of WinPcap, we suggest the reading of the
following documents:</p>
<ul>
  <li>Fulvio Risso, Loris Degioanni, <a href="http://www.polito.it/~risso/pubs/iscc01-wpcap.pdf">An
    Architecture for High Performance Network Analysis</a>, <i>Proceedings of
    the 6<sup>th</sup> IEEE Symposium on Computers and Communications (ISCC
    2001)</i>, Hammamet, Tunisia, July 2001</li>
  <li><span lang="EN-US" style="mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">Loris
    Degioanni, <a href="http://winpcap.polito.it/docs/th_degio.zip">Development
    of an Architecture for Packet Capture and Network Traffic Analysis</a>,
    Graduation Thesis, Politecnico Di Torino (Turin, Italy, Mar. 2000)</span>
</ul>
<h2>Note</h2>
<p>Our development and documentation efforts focus primarily on the
Windows NT/2000/XP version of WinPcap. This choice is based on the fact that the
majority of the WinPcap users work on NTx systems, but also that the 9x technology
has been abandoned by Microsoft. Moreover, we assume that a person that needs to
use a PC for an advanced task like network analysis installs an advanced OS on the
machine. For this reason, this documentation will refer to the WinNTx
drivers and APIs. Win9x versions are very similar in the concept but sometimes
differ in the implementation, moreover the Win9x version of the WinPcap APIs
lack of some sophisticated functionality. This documentation will describe the whole
APIs, but it will specify when a function is present only in Windows NTx.</p>
<p>


*/</p>
</body>


